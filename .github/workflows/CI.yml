name: CI

on:
  push:
  pull_request:

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        target: [x86_64, i686]
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true
      - name: Build
        run: cargo build --release
      - name: Tests
        run: cargo test --no-default-features --release
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install -r requirements.txt
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          container: off
          args: -i python${{ matrix.python-version }} --release --out dist --no-sdist
      # - name: Python UnitTest
      #   if: matrix.target == 'x86_64'
      #   run: |
      #     pip install cramjam --no-index --find-links dist --force-reinstall
      #     pip install -r dev-requirements.txt
      #     make test
      # - name: Test no numpy installed works
      #   if: matrix.target == 'x86_64'
      #   run: |
      #     pip uninstall numpy -y
      #     python -m pytest tests/test_no_numpy.py
      # - name: Test benchmarks
      #   if: matrix.target == 'x86_64'
      #   run: |
      #     sudo apt-get install -y libsnappy-dev
      #     pip install -r benchmark-requirements.txt
      #     make test-bench
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
          cache: "pip"
      - run: pip install -r requirements.txt
      - uses: messense/maturin-action@v1
        with:
          command: build
          args: --release --no-sdist -o dist
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
          cache: "pip"
      - run: pip install -r requirements.txt
      - uses: messense/maturin-action@v1
        with:
          command: build
          args: --release --no-sdist -o dist --universal2
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [macos, windows, linux]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
